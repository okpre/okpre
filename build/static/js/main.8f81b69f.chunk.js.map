{"version":3,"sources":["Loader/Loader.js","Table/Table.js","DetailRowView/DetailRowView.js","ModeSelector/ModeSelector.js","TableSearch/TableSearch.js","Alert/Alert.js","AddPerson/AddPerson.js","AddPerson/AddButton.js","App.js","serviceWorker.js","index.js"],"names":["className","props","onClick","onSort","bind","scope","sortField","sort","aria-hidden","data","map","item","key","id","phone","onRowSelect","firstName","lastName","email","person","undefined","description","defaultValue","address","streetAddress","city","state","zip","style","padding","onSelect","useState","value","setValue","type","onChange","event","target","onSearch","setId","setFName","setLName","setEmail","setPhone","newPerson","min","placeholder","disabled","e","addNewPerson","margin","adderHandler","App","isModeSelected","isLoading","isAdding","search","row","currentPage","addMode","alert","isAlerted","cloneData","concat","_","orderBy","setState","modeSelectHandler","url","fetchData","pageChangeHandler","selected","searchHandler","addHandler","temp","some","unshift","closeHandler","fetch","response","json","this","filter","toLowerCase","includes","length","ModeSelector","filteredData","getFilteredData","pageCount","Math","ceil","displayData","chunk","Fragment","Alert","TableSearch","AddButton","AddPerson","Table","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","activeClassName","pageClassName","pageLinkClassName","previousClassName","nextClassName","previousLinkClassName","nextLinkClassName","forcePage","DetailRowView","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8f81b69f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Loader.css';\r\n\r\nexport default () => (\r\n    <div className=\"lds-spinner\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n    )\r\n","import React from \"react\";\r\n\r\nexport default props => (\r\n    <table className=\"table border-bottom\">\r\n        <thead className=\"thead-dark\">\r\n        <tr>\r\n            <th onClick={props.onSort.bind(null, 'id')} scope=\"col\">\r\n                ID {props.sortField === 'id'\r\n                ? props.sort === 'asc'\r\n                    ?<i className=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\r\n                    :<i className=\"fa fa-caret-up\" aria-hidden=\"true\"></i>\r\n                : null}\r\n            </th>\r\n            <th onClick={props.onSort.bind(null, 'firstName')} scope=\"col\">\r\n                Имя {props.sortField === 'firstName'\r\n                ? props.sort === 'asc'\r\n                    ?<i className=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\r\n                    :<i className=\"fa fa-caret-up\" aria-hidden=\"true\"></i>\r\n                : null}\r\n            </th>\r\n            <th onClick={props.onSort.bind(null, 'lastName')} scope=\"col\">\r\n                Фамилия {props.sortField === 'lastName'\r\n                ? props.sort === 'asc'\r\n                    ?<i className=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\r\n                    :<i className=\"fa fa-caret-up\" aria-hidden=\"true\"></i>\r\n                : null}\r\n            </th>\r\n            <th onClick={props.onSort.bind(null, 'email')} scope=\"col\">\r\n                E-mail {props.sortField === 'email'\r\n                ? props.sort === 'asc'\r\n                    ?<i className=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\r\n                    :<i className=\"fa fa-caret-up\" aria-hidden=\"true\"></i>\r\n                : null}\r\n            </th>\r\n            <th onClick={props.onSort.bind(null, 'phone')} scope=\"col\">\r\n                Телефон {props.sortField === 'phone'\r\n                ? props.sort === 'asc'\r\n                    ?<i className=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\r\n                    :<i className=\"fa fa-caret-up\" aria-hidden=\"true\"></i>\r\n                : null}\r\n            </th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n            { props.data.map(item=>(\r\n                <tr key={item.id + item.phone} onClick={props.onRowSelect.bind(null, item)}>\r\n                    <td>{item.id}</td>\r\n                    <td>{item.firstName}</td>\r\n                    <td>{item.lastName}</td>\r\n                    <td>{item.email}</td>\r\n                    <td>{item.phone}</td>\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n    </table>\r\n)","import React from \"react\";\r\n\r\nexport default ({person}) => (\r\n    person.description === undefined\r\n    ?<div className=\"d-flex flex-column align-items-center m-3\">\r\n        <p>Выбран пользователь <b>{person.firstName + ' ' + person.lastName}</b></p>\r\n        <p><b>Подробная информация отсутствует</b></p>\r\n    </div>\r\n    :<div className=\"d-flex flex-column align-items-center\">\r\n        <p>Выбран пользователь <b>{person.firstName + ' ' + person.lastName}</b></p>\r\n        <p>\r\n            Описание: <br />\r\n            <textarea defaultValue={person.description} />\r\n        </p>\r\n        <p>\r\n            Адрес проживания: <b>{person.address.streetAddress}</b>\r\n        </p>\r\n        <p>\r\n            Город: <b>{person.address.city}</b>\r\n        </p>\r\n        <p>\r\n            Провинция/штат: <b>{person.address.state}</b>\r\n        </p>\r\n        <p>\r\n            Индекс: <b>{person.address.zip}</b>\r\n        </p>\r\n    </div>\r\n)","import React from \"react\";\r\n\r\nexport default props => {\r\n\r\n    const smallUrl = 'http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}';\r\n    const bigUrl = 'http://www.filltext.com/?rows=1000&id={number|1000}&firstName={firstName}&delay=3&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}';\r\n\r\n    return (\r\n        <div className=\"d-flex align-items-center flex-column\" style={{padding: '50px 0'}}>\r\n            <b>Выберите объём данных</b>\r\n            <div className=\"d-flex justify-content-center\">\r\n                <button onClick={() => props.onSelect(smallUrl)} className=\"btn btn-light m-5\">Маленький</button>\r\n                <button onClick={() => props.onSelect(bigUrl)} className=\"btn btn-light m-5\">Большой</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState} from \"react\";\r\n\r\nexport default props => {\r\n\r\n    const [value, setValue] = useState('')\r\n\r\n    const valueChangeHandler = event => {\r\n        setValue(event.target.value)\r\n    }\r\n\r\n    return(\r\n        <div className=\"d-flex text-center flex-column align-items-center\">\r\n            <div className=\"input-group w-50 p-2\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={valueChangeHandler}\r\n                    value={value}\r\n                />\r\n                <div className=\"input-group-prepend\">\r\n                    <button\r\n                        className=\"btn btn-outline-secondary\"\r\n                        onClick={() => props.onSearch(value)} >Поиск</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"m-2\">\r\n                <div>Для поиска введите Имя, Фамилию или email</div>\r\n                <div>Для сортировки нажмите на название в шапке таблицы</div>\r\n                <div>Чтобы получить подробную информанию нажмите на строку</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport default () => {\r\n    return(\r\n        <div className=\"d-flex justify-content-center mt-3\">\r\n            <p><b>Поиск не дал результатов</b></p>\r\n        </div>\r\n    )\r\n}","import React, {useState} from \"react\";\r\n\r\nexport default props => {\r\n\r\n    const [id, setId] = useState('')\r\n    const [firstName, setFName] = useState('')\r\n    const [lastName, setLName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [phone, setPhone] = useState('')\r\n\r\n    let newPerson = {\r\n        id,\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        phone,\r\n    }\r\n\r\n    const ChangeSetId = event => {\r\n        setId(event.target.value)\r\n    }\r\n\r\n    const ChangeSetFName = event => {\r\n        setFName(event.target.value)\r\n    }\r\n\r\n    const ChangeSetLName = event => {\r\n        setLName(event.target.value)\r\n    }\r\n\r\n    const ChangeSetEmail = event => {\r\n        setEmail(event.target.value)\r\n    }\r\n\r\n    const ChangeSetPhone = event => {\r\n        setPhone(event.target.value)\r\n    }\r\n\r\n    const addHandler = e => {\r\n        setId('')\r\n        setFName('')\r\n        setLName('')\r\n        setEmail('')\r\n        setPhone('')\r\n        props.addNewPerson(e)\r\n    }\r\n\r\n    return(\r\n        <div className=\"d-flex m-2 flex-column\">\r\n            <form className=\"m-3\">\r\n                <div className=\"form-row d-flex justify-content-around\">\r\n                    <div className=\"col-2 mb-3\">\r\n                        <input type=\"number\"\r\n                               min=\"0\"\r\n                               className=\"form-control\"\r\n                               placeholder=\"ID\"\r\n                               value={id}\r\n                               onChange={ChangeSetId}\r\n\r\n                               />\r\n                    </div>\r\n                    <div className=\"col-2  mb-3\">\r\n                        <input type=\"text\"\r\n                               className=\"form-control\"\r\n                               placeholder=\"Имя\"\r\n                               value={firstName}\r\n                               onChange={ChangeSetFName}\r\n                               />\r\n                    </div>\r\n                    <div className=\"col-2  mb-3\">\r\n                        <input type=\"text\"\r\n                               className=\"form-control\"\r\n                               placeholder=\"Фамилия\"\r\n                               value={lastName}\r\n                               onChange={ChangeSetLName}\r\n                               />\r\n                    </div>\r\n                    <div className=\"col-2  mb-3\">\r\n                        <input type=\"email\"\r\n                               className=\"form-control\"\r\n                               placeholder=\"Email\"\r\n                               value={email}\r\n                               onChange={ChangeSetEmail}\r\n                               />\r\n                    </div>\r\n                    <div className=\"col-2  mb-3\">\r\n                        <input type=\"text\"\r\n                               className=\"form-control\"\r\n                               placeholder=\"Телефон\"\r\n                               value={phone}\r\n                               onChange={ChangeSetPhone}\r\n                               />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n                <button className={\"btn btn-dark w-75 mb-1\"}\r\n                        disabled={!(id && firstName && lastName && email && phone)}\r\n                        type=\"submit\"\r\n                        onClick={() => addHandler(newPerson)}\r\n                        style={{margin: '0 auto'}}>Добавить</button>\r\n\r\n                <button className=\"btn btn-dark w-75 mt-1\"\r\n                        onClick={() => props.adderHandler(false)}\r\n                        style={{margin: '0 auto'}}>Закрыть</button>\r\n        </div>\r\n)}","import React from \"react\";\r\n\r\nexport default props => {\r\n    return(\r\n        <div className=\"d-flex justify-content-center\">\r\n            <button className=\"btn btn-dark w-75 mt-1 mb-2\"\r\n                    onClick={() => props.adderHandler(true)}>Добавить новую запись</button>\r\n        </div>\r\n    )\r\n}","import React, {Component} from 'react';\nimport Loader from \"./Loader/Loader\";\nimport Table from \"./Table/Table\";\nimport DetailRowView from \"./DetailRowView/DetailRowView\";\nimport ModeSelector from \"./ModeSelector/ModeSelector\";\nimport TableSearch from \"./TableSearch/TableSearch\";\nimport Alert from \"./Alert/Alert\";\nimport AddPerson from \"./AddPerson/AddPerson\";\nimport AddButton from \"./AddPerson/AddButton\";\nimport _ from 'lodash';\nimport ReactPaginate from 'react-paginate';\n\n\nclass App extends Component{\n\n    state = {\n        isModeSelected: false,\n        isLoading: false,\n        isAdding: false,\n        data: [],\n        search:'',\n        sort: 'asc',\n        sortField: 'id',\n        row: null,\n        currentPage: 0,\n        addMode: false,\n    }\n\n    alert = {\n        isAlerted: false,\n    }\n\n    async fetchData(url) {\n        const response = await fetch(url)\n        const data = await response.json()\n        this.setState({\n            isLoading: false,\n            data: _.orderBy(data, this.state.sortField, this.state.sort)\n        })\n    }\n\n    onSort = sortField => {\n        const cloneData = this.state.data.concat();\n        const sort = this.state.sort === 'asc' ? 'desc' : 'asc';\n        const data = _.orderBy(cloneData, sortField, sort);\n        this.setState({data, sort, sortField});\n    }\n\n    onRowSelect = row => (\n        this.setState({row})\n    )\n\n    modeSelectHandler = url => {\n        this.setState({\n            isModeSelected: true,\n            isLoading: true,\n        })\n        this.fetchData(url)\n    }\n\n    pageChangeHandler = ({selected}) => {\n        this.setState({currentPage: selected})\n    }\n\n    searchHandler = search => {\n        this.setState({search, currentPage: 0})\n    }\n\n    getFilteredData(){\n        const {data, search} = this.state\n\n        if (!search) {\n            return data\n        }\n\n        else if (data.filter(item => {\n                return  item['firstName'].toLowerCase().includes(search.toLowerCase())\n                || item['lastName'].toLowerCase().includes(search.toLowerCase())\n                || item['email'].toLowerCase().includes(search.toLowerCase())\n        }).length === 0){\n            this.alert.isAlerted = true\n            return data\n        }\n\n        else {this.alert.isAlerted = false\n            return data.filter(item => {\n            return item['firstName'].toLowerCase().includes(search.toLowerCase())\n                || item['lastName'].toLowerCase().includes(search.toLowerCase())\n                || item['email'].toLowerCase().includes(search.toLowerCase())\n        })}\n    }\n\n    addHandler = newPerson => {\n        let temp = this.state.data;\n        if (temp.some(e => e.id === newPerson.id) && temp.some(e => e.phone === newPerson.phone)){\n            alert('Уже в списке');\n        }\n        else{\n        temp.unshift(newPerson);\n        this.setState({data: temp})\n    }}\n\n    closeHandler = event => {\n        this.setState({isAdding: event})\n    }\n\n    render() {\n\n        const pageSize = 50;\n\n        if(!this.state.isModeSelected){\n            return (\n                <div className=\"container\">\n                    <ModeSelector onSelect={this.modeSelectHandler} />\n                </div>\n            )\n        }\n\n        const filteredData = this.getFilteredData();\n        const pageCount = Math.ceil(filteredData.length / pageSize)\n        const displayData = _.chunk(filteredData, pageSize)[this.state.currentPage];\n\n        return (\n            <div className=\"container-fluid p-0\">\n\n                {\n                    this.state.isLoading\n                    ?<Loader />\n                    :<React.Fragment>\n                        {this.alert.isAlerted\n                        ?<Alert />\n                        :null}\n                        <TableSearch onSearch={this.searchHandler} />\n                        {!this.state.isAdding\n                        ?<AddButton\n                            adderHandler={this.closeHandler}\n                        />\n                        :null}\n                        {this.state.isAdding\n                        ?<AddPerson\n                            addNewPerson={this.addHandler}\n                            adderHandler={this.closeHandler}\n                        />\n                        :null}\n                        <Table\n                            data={displayData}\n                            onSort={this.onSort}\n                            sort={this.state.sort}\n                            sortField={this.state.sortField}\n                            onRowSelect={this.onRowSelect}\n                        />\n                        </React.Fragment>\n\n                }\n\n                {\n                    this.state.data.length > pageSize\n                    ? <div className=\"container-fluid d-flex justify-content-center\">\n                            <ReactPaginate\n                            previousLabel={'<'}\n                            nextLabel={'>'}\n                            breakLabel={'...'}\n                            breakClassName={'break-me'}\n                            pageCount={pageCount}\n                            marginPagesDisplayed={2}\n                            pageRangeDisplayed={5}\n                            onPageChange={this.pageChangeHandler}\n                            containerClassName={'pagination'}\n                            activeClassName={'active'}\n                            pageClassName=\"page-item\"\n                            pageLinkClassName=\"page-link\"\n                            previousClassName=\"page-item\"\n                            nextClassName=\"page-item\"\n                            previousLinkClassName=\"page-link\"\n                            nextLinkClassName=\"page-link\"\n                            forcePage={this.state.currentPage}\n                        />\n                    </div>\n                    : null\n                }\n\n                {\n                    this.state.row ? <DetailRowView person={this.state.row} /> : null\n                }\n\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'font-awesome/css/font-awesome.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}